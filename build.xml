<?xml version="1.0"?>

<project name="Thaw" default="jar">

	<property name="src.dir" value="src" />
	<property name="test" location="test"/>
	<property name="bin.dir" value="build" />
	<property name="build-test" location="build-test"/>
	<property name="images.dir" value="images" />
	<property name="lib.dir" value="lib" />
	<property name="javadoc.dir" value="javadoc" />
	<property name="javac.debug" value="false" />
	<property name="svn.revision" value="@custom@"/>

	<property name="licenses.dir" value="licenses" />

	<property name="final.dir" value="bin" />
	
	<property name="junit.location" value="${lib.dir}/junit.jar"/>
	<available file="${junit.location}" property="junit_available"/>

	<!-- HSQLDB -->
	<property name="hsqldb.location" value="${lib.dir}/hsqldb.jar" />
	<available file="${hsqldb.location}" property="hsqldb_available" />
	<fail unless="hsqldb_available" status="1"
	message="You need to download hsqldb.jar from http://sourceforge.net/projects/hsqldb/ and to put it in lib/ or set the ant property 'hsqldb.location' to the correct path (filename included)" />

	<!-- BOUNCYCASTLE -->
	<property name="bouncycastle.location" value="${lib.dir}/BouncyCastle.jar" />
	<available file="${bouncycastle.location}" property="bouncycastle_available" />
	<fail unless="bouncycastle_available" status="1"
	message="You need to download the bouncycastle provider for the JDK 1.4 from http://bouncycastle.org/latest_releases.html and put it in lib/ with the name BouncyCastle.jar. or set the ant property 'bouncycastle.location' to the correct path (filename included)" />

	<target name="compile">
		<mkdir dir="${bin.dir}" />

		<replace file="${src.dir}/thaw/core/Main.java">
			<replacefilter token="@custom@" value="${svn.revision}"/>
		</replace>


		<javac srcdir="${src.dir}" destdir="${bin.dir}" debug="true" optimize="true" encoding="UTF8">

			<!-- <compilerarg value="-Xlint" /> -->
			<classpath>
				<pathelement location="${hsqldb.location}"/>
				<pathelement location="${bouncycastle.location}" />
			</classpath>
		</javac>

		<copy todir="${bin.dir}">
		        <fileset dir="licenses" />
			<fileset file="readme.txt" />

			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.png" /><!-- for the liquid lnf -->
			</fileset>
		</copy>

		<copy todir="${bin.dir}/images">
			<fileset dir="${images.dir}" />
		</copy>

	</target>


	<target name="run" depends="compile">
		<java classname="thaw.core.Main" classpath="${bouncycastle.location}:${hsqldb.location}:${bin.dir}" dir="${bin.dir}" fork="true" />
	</target>


	<target name="jar" depends="compile,unit" description="Make the Jar" >
		<mkdir dir="${final.dir}" />

		<jar jarfile="${final.dir}/Thaw.jar" basedir="${bin.dir}">
		    <manifest>
			    <attribute name="Main-Class" value="thaw.core.Main" />
				<attribute name="Class-Path" value=". Thaw.jar hsqldb.jar BouncyCastle.jar" />
			</manifest>

			<fileset dir="build">
			   <include name="**/*.class" />
			</fileset>

			<fileset dir=".">
			    <include name="${lib.dir}/**/*.jar" />
			    <include name="${licenses.dir}/**/*.txt" />
			    <include name="${images.dir}/**/*.png" />
			</fileset>
		</jar>
	</target>


	<target name="jar-nodeps" depends="compile" description="Make a Jar without including the .jar dependancies" >
		<mkdir dir="${final.dir}" />

		<jar jarfile="${final.dir}/Thaw-light.jar" basedir="${bin.dir}">
		        <manifest>
			        <attribute name="Main-Class" value="thaw.core.Main" />
				<attribute name="Class-Path" value="." />
			</manifest>

			<fileset dir="build">
			   <include name="**/*.class" />
			</fileset>

			<fileset dir=".">
			    <include name="${licenses.dir}/**/*.txt" />
			    <include name="${images.dir}/**/*.png" />
			</fileset>
		</jar>
	</target>


	<target name="javadoc">
		<javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}">
			<fileset dir="${src.dir}" includes="**/*.java" />
		</javadoc>
	</target>


	<target name="clean">
		<delete dir="${bin.dir}"/>
		<delete file="${final.dir}/Thaw.jar"/>
	</target>
	
	<target name="unit-build" depends="compile">
		<fail unless="junit_available" status="1">
			message="To unit test, you need to download JUnit 4 from http://www.junit.org and put it in lib/ with the name junit.jar or set the ant property 'junit.location' to the correct path (filename included)" />
		</fail>

		<delete dir="${build-test}"/>
		<mkdir dir="${build-test}"/>

		<javac srcdir="${test}" destdir="${build-test}" debug="on" optimize="on" source="1.6" target="1.6">
			<classpath>
				<pathelement path="${bin.dir}"/>
				<pathelement location="${junit.location}"/>
			</classpath>
			<compilerarg value="-Xlint"/>
			<include name="**/*.java"/>
			<exclude name="*.java"/>
		</javac>
	</target>

	<target name="unit" depends="unit-build">
		<junit printsummary="yes" fork="yes" haltonfailure="yes">
			<classpath>
				<pathelement path="${bin.dir}"/>
				<pathelement path="${build-test}"/>
				<pathelement location="${junit.location}"/>
			</classpath>

			<formatter type="plain" usefile="false"/>

			<batchtest fork="yes">
				<fileset dir="${build-test}">
					<include name="**/*Test.class"/>
				</fileset>
			</batchtest>
			<!-- It appears we need to specify this here explicitly -->
			<assertions>
				<enable />
			</assertions>
		</junit>
	</target>

</project>
